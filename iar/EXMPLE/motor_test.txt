#include "all.h"
#include "math.h"
uint8 key1,key2;
char i=50;
uint8 flag_uart=0,flag_time=0,flag_key=0;
uint32 t=0,times=0;
uint8 data[8];
void Init_LCD()
{
    LCD_Init();
   // LCD_8x16Str(0,0,"MotorDuty:");
    //LCD_6x8Str(0,2,"Accel_x:");   
    //LCD_6x8Str(0,3,"Accel_y:");   
    //LCD_6x8Str(0,4,"Accel_z:");  
    LCD_6x8Str(0,5,"Pit:");   
    LCD_6x8Str(0,6,"Rol:");    
    LCD_6x8Str(0,7,"Yaw:");    
    //LCD_6x8Str(17,2,"m/s");
    //LCD_6x8Str(17,3,"m/s");
    //LCD_6x8Str(17,4,"m/s");
    //LCD_6x8Str(17,5,".");
    //LCD_6x8Str(17,6,".");
    //LCD_6x8Str(17,7,".");
}

int main()
{
    SYS_CLOCK_SET(SYS_CLOCK_150M, 1, 2, 3, 6);
    motor_PWM_init(50,0.032);
    PORT_Enable_ALL();
    GPIO_INIT(PORTC,0,INPUT);
    GPIO_INIT(PORTC,1,INPUT);
    Init_LCD();
    I2C_INIT(MPU6050_I2C_CH,I2C1_PE0_PE1); 
    GPIO_ODE(PORTE,0);
    GPIO_ODE(PORTE,1);
    Init_MPU6050_DMP();
    DisableInterrupts
    //**************************************
    // ADC
    ADC_init_fly();
    //*************************************
    //GPIO_TEST_INIT
    GPIO_INIT(PORTB,21,OUTPUT);
    //*************************************
    //led_init
    led_init();
    led_set(1,1,1,1);
    //*************************************
    //PIT0
    PIT_CLOCK_Enable
    //PIT_INIT(PIT0,150000000,DEBUG_STOP);
    PIT_INIT(PIT0,600000,DEBUG_STOP);//4.5ms
    Enable_IRQ(INT_PIT0);
    PIT_Enable(PIT0);
    PITINT_Enable(PIT0);
    SET_IRQ_PRIOR(84,0);
    //************************************
    //UART
    GPIOType_UART(PORTB_16_17);
    UART_INIT(UART0,75000,115200);
    UART_FIFO_read_init(UART0);
    Enable_IRQ(61);
    UARTINT_Enable(UART0,RIE);
    //*************************************** 
    GPIO_Enable(PORTC,0);
    GPIO_Enable(PORTC,1);
    Enable_IRQ(INT_PORTC);
    GPIOINT_Enable(PORTC,0,LEVEL_LOW);
    GPIOINT_Enable(PORTC,1,LEVEL_LOW);
    SET_IRQ_PRIOR(INT_PORTC,1);
    //***************************************
    EnableInterrupts
    PID_init();
    while(1)
    {
      //Get_Attitude();
      //display(7,0,(int32)(Kpy*100));//2.55ms
      //send_line(UART0,3,Kpy);
      #if 1
      display(0,0,(int32)(Kpx*100));
      display(0,1,(int32)(Kix*100));
      display(0,2,(int32)(Kdx*100));
      display(7,0,(int32)(Kpz*100));
      display(7,1,(int32)(Kiz*100));
      display(7,2,(int32)(Kdz*100));
      display(6,5,(int32)(Pitch*100));
      display(6,6,(int32)(Roll*100));
      display(6,7,(int32)(Yaw*100));
     // display_DMP(10,2,(int32)(((float)PWM2)*100));
      display_DMP(10,0,(int32)(((float)POWER_reslut)/10));
      LCD_8x16char(15,0,'V');
      //display_DMP(10,3,(int32)(((float)PWM4)*100));
     // display_DMP(10,1,(int32)(((float)PWM3)*100));
      #endif
      #if 1
      //send_line(UART0,1,Kpx*100);
      //send_line(UART0,2,Kix*100);
      //send_line(UART0,3,Kdx*100);
      //display(0,1,(int32)(Pitch*100));
      //send_float(UART0,Pitch);
      send_line(UART0,1,Pitch_error);
      send_line(UART0,2,0);
      //send_line(UART0,4,Kpy*100);
      //send_line(UART0,5,Kiy*100);
      //send_line(UART0,6,Kdy*100);
      send_line(UART0,3,Roll_error);//0.6ms
      //send_line(UART0,3,Yaw);
      //send_line(UART0,2,PWM1);
      //send_line(UART0,4,PWM2);
      //send_line(UART0,3,PWM3);
      //send_line(UART0,5,PWM4);
      //send_line(UART0,5,gyro[1]);
      send_line(UART0,4,sum_pitch);
      send_line(UART0,5,sum_Roll);
      //send_line(UART0,4,gyro[0]);
      #endif 
      //times++;
      ADC_power_fly(&POWER_reslut);
    }
}

void PIT0_IRQHandler(void)
 {
     DisableInterrupts
     t++;
     Get_Attitude();
     if(flag_time)
      {
        PID_Control();//15us
        motor_dutyset(PWM1,PWM2,PWM3,PWM4);//12us
        //motor_dutyset(driver1,driver1,driver1,driver1);//ÐÞ¸Äµç»ú
      }
     if(POWER_reslut<10000)
      {
          if(t>50)
           {
               led_shake();
               t=0;
           }
      }
     else 
      if((t==7000)&&(flag_time==0))
      {    
          float temp1=0,temp2=0,temp3=0;
          while(i--)
          {
              Get_Attitude();
              temp1+=Pitch;
              temp2+=Roll;
              temp3+=Yaw;
              t=0;
          }
          Pitch_adjust=temp1/50;
          Roll_adjust=temp2/50;
          Yaw_adjust=temp3/50;
          led_set(0,0,0,0);
          flag_time=1;      
      } 
      PITINT_Clear(PIT0);
      //send_line(UART0,3,times);
      //times=0;
      EnableInterrupts
 }

void PORTC_IRQHandler(void)
 {
     GPIOINT_Clear(PORTC);
     key1=GPIO_GET(PORTC,0);
     key2=GPIO_GET(PORTC,1);
         if(key1==0)
          {
              SYSDelay_ms(5);
              key1=GPIO_GET(PORTC,0);
              if(key1==0)
               {
                   while(!GPIO_GET(PORTC,0));
                   driver1+=0.2001;
                   driver3+=0.2001;
                   driver2+=0.2001;
                   driver4+=0.2001;
                   flag_key=1;
               }
          }
         if(key2==0)
          {
              SYSDelay_ms(5);
              key2=GPIO_GET(PORTC,1);
              if(key2==0)
               {
                   while(!GPIO_GET(PORTC,1));
                   driver1-=0.2001;
                   driver3-=0.2001;
                   driver2-=0.2001;
                   driver4-=0.2001;
                   flag_key=1;
               }
          }
         if(flag_key)
          {
              motor_dutyset(PWM1,PWM2,PWM3,PWM4);
              flag_key=0;
         }
         while(1);
 }

void UART0_RX_TX_IRQHandler(void)
 {
     DisableInterrupts
     UART_FIFO_Read_value(UART0,data);
     read_pose(UART0,data);
     P1_I1_D1_change(&Kpx,&Kix,&Kdx_test,data);
     P2_I2_D2_change(&Kpy,&Kiy,&Kdy_test,data);
     EnableInterrupts
 }