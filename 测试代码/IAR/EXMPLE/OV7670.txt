#include "all.h"
uint16  i=0,j=0;
#define  X_MAX    320
#define  Y_MAX    240
uint8   date[480][100],read_value=0;
uint8 flag_photo=0,times=0,vsync_flag=0;
uint16 t1,t2;
void TFT_Pin_init()
 {
     GPIO_INIT(RST_PORT,RST_PIN,1);
     GPIO_INIT(DC_PORT,DC_PIN,1);
     GPIO_INIT(CS_PORT,CS_PIN,1);
     GPIO_DSE(CS_PORT,CS_PIN);
 }
void main()
 {
     SYS_CLOCK_SET(SYS_CLOCK_150M,1,2,3,6);
     DisableInterrupts
     //VSYNC中断
     GPIO_INIT(VSYNC_PORT,VSYNC_PIN,INPUT);
     GPIOPULL_SET(VSYNC_PORT,VSYNC_PIN,PULL_DOWN);
     Enable_IRQ(INT_PORTB);
     GPIOINT_Enable(VSYNC_PORT,VSYNC_PIN,LEVEL_FALLING);
     
     //************************
     //init_yuv_25fps();
    // SCCB_init();
     Camera_pin_init();
     //SCCB_write_reg(0X12,0X80);
     //设置输入端口
     GPIO_INIT(PORTD,0,INPUT);
     GPIO_INIT(PORTD,1,INPUT);
     GPIO_INIT(PORTD,2,INPUT);
     GPIO_INIT(PORTD,3,INPUT);
     GPIO_INIT(PORTD,4,INPUT);
     GPIO_INIT(PORTD,5,INPUT);  
     GPIO_INIT(PORTD,6,INPUT);
     GPIO_INIT(PORTD,7,INPUT);
     GPIOPULL_SET(PORTD,0,PULL_UP);
     GPIOPULL_SET(PORTD,1,PULL_UP);
     GPIOPULL_SET(PORTD,2,PULL_UP);
     GPIOPULL_SET(PORTD,3,PULL_UP);
     GPIOPULL_SET(PORTD,4,PULL_UP);
     GPIOPULL_SET(PORTD,5,PULL_UP);
     GPIOPULL_SET(PORTD,6,PULL_UP);
     GPIOPULL_SET(PORTD,7,PULL_UP);
     //PIT
     PIT_CLOCK_Enable
    PIT_INIT(PIT3,150000000,DEBUG_STOP);
    //Enable_IRQ(87);
    PIT_Enable(PIT3);
    PITINT_Enable(PIT3);
    
    //UART
    //GPIOType_UART(PORTB_16_17);
    //UART_INIT(UART0,75000,115200);
    
     //TFT_SPI初始化
     TFT_Pin_init();
     SPILCD_CS_SET;
     GPIOType_SPI(SPI0,SPI0_PCS0_PTC4,SPI0_SCK_PTC5,SPI0_SOUT_PTC6,SPI0_SIN_PTC7);
     SPI_init(SPI0,MASTER);
     TFT_Init();
     EnableInterrupts
     while(1)
      {
          //TFT_Clear(RED);
      }
 }

void PORTB_IRQHandler(void)
 {
       GPIOINT_Clear(PORTB);
       vsync_flag++;
       if(vsync_flag==1)
        {
            FIFO_WRST_Set;
            FIFO_WRST_Clear;
            for(i=0;i<100;i++);
            FIFO_WRST_Set;
            FIFO_WR_Set;
        }
       if(vsync_flag==2)
        {
            FIFO_WR_Clear;
            DisableInterrupts
            FIFO_RRST_Clear;
            FIFO_RCK_Clear;
            FIFO_RCK_Set;
            FIFO_RCK_Clear;
            FIFO_RCK_Set;
            FIFO_RRST_Set;
            LCD_WriteRAM_Prepare(); 
            FIFO_OE_Clear;
            for(i=0;i<X_MAX;i++)
             {
                for(j=0;j<Y_MAX;j++)
                 {
                     FIFO_RCK_Clear;
                     FIFO_RCK_Set;
                     t1=GPIOD_PDIR&0XFF;
                     FIFO_RCK_Clear;
                     FIFO_RCK_Set;
                     t2=GPIOD_PDIR&0XFF;
                     LCD_WR_DATA((t1<<8)|t2); 
                 }
             }
            FIFO_OE_Set;
            vsync_flag=0;
            EnableInterrupts
        }
 }


void PIT3_IRQHandler(void)
 {
       PITINT_Clear(PIT3);
 }