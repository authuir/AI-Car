#include "all.h"
int32 Accel_X=0,Accel_Y,Accel_Z,Angle_X,Angle_Y,Angle_Z;
void display(uint8 x,uint8 y,int32 num)
 {
     if(num<0)
      {
          LCD_6x8char(x-1,y,'-');
          num=num*(-1);
      }
     else LCD_6x8char(x-1,y,' ');
     LCD_6x8char(x,y,num/10000+48);
      LCD_6x8char(x+1,y,num%10000/1000+48);
       LCD_6x8char(x+2,y,num%1000/100+48);
        LCD_6x8char(x+3,y,num%100/10+48);
         LCD_6x8char(x+4,y,num%10+48);
 }
int main()      
{
	SYS_CLOCK_SET(SYS_CLOCK_150M, 1, 2, 3, 6);
    I2C_INIT(I2C0,I2C0_PB2_PB3);
   MPU6050_Init();
    LCD_Init();
    LCD_8x16Str(4,0,"MPU6050");
    LCD_6x8Str(0,2,"Accel_X_Data:");
    LCD_6x8Str(0,3,"Accel_Y_Data:");
    LCD_6x8Str(0,4,"Accel_Z_Data:");
    LCD_6x8Str(0,5,"Gyro_X_Data:");
    LCD_6x8Str(0,6,"Gyro_Y_Data:");
    LCD_6x8Str(0,7,"Gyro_Z_Data:");
    DisableInterrupts
    PIT_CLOCK_Enable
    PIT_INIT(PIT3,75000000,DEBUG_STOP);
    Enable_IRQ(87);
    EnableInterrupts
    PIT_Enable(PIT3);
    PITINT_Enable(PIT3);
    GPIOType_UART(PORTA_14_15);
    UART_Enable(UART0);
    UART_INIT(UART0,75000,115200);
     while(1){
        MPU6050_Accel(&Accel_X,&Accel_Y,&Accel_Z);
        MPU6050_Gyro(&Angle_X,&Angle_Y,&Angle_Z);
        }
}

void PIT3_IRQHandler(void)
 {
       PITINT_Clear(PIT3);
       UART_SS(UART0,"Accel_X:");
       UART_S1(UART0,Accel_X);
       UART_SS(UART0,"Accel_Y:");
       UART_S1(UART0,Accel_Y);
       UART_SS(UART0,"Accel_Z:");
       UART_S1(UART0,Accel_Z);
 }
/*
void PIT3_IRQHandler(void)
 {
       PITINT_Clear(PIT3);
       DisableInterrupts
    display(15,2,Accel_X);
    display(15,3,Accel_Y);
    display(15,4,Accel_Z);
    display(15,5,Angle_X);
    display(15,6,Angle_Y);
    display(15,7,Angle_Z);
       EnableInterrupts
 }*/