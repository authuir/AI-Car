#include "all.h"
uint16  i=0,j=0;
#define  X_MAX     50
#define  Y_MAX     50
uint8 yuv=0;
uint8   date[X_MAX][Y_MAX];
uint8 flag_photo=0;
void main()
 {
     SYS_CLOCK_SET(SYS_CLOCK_150M,1,2,3,6);
     DisableInterrupts
     //VSYNC中断
     GPIO_INIT(VSYNC_PORT,VSYNC_PIN,INPUT);
     GPIOPULL_SET(VSYNC_PORT,VSYNC_PIN,PULL_DOWN);
     Enable_IRQ(INT_PORTB);
     GPIOINT_Enable(VSYNC_PORT,VSYNC_PIN,LEVEL_FALLING);
     
     //HREF中断
     GPIO_INIT(HREF_PORT,HREF_PIN,INPUT);
     GPIOPULL_SET(HREF_PORT,HREF_PIN,PULL_UP);
     GPIOINT_Enable(HREF_PORT,HREF_PIN,LEVEL_RISING);
     
     //PCLK中断
    // GPIO_INIT(PCLK_PORT,PCKL_PIN,INPUT);
     //GPIOINT_Enable(PCLK_PORT,PCKL_PIN,LEVEL_RISING);
     //设置输入端口
     GPIO_INIT(PORTD,0,INPUT);
     GPIO_INIT(PORTD,1,INPUT);
     GPIO_INIT(PORTD,2,INPUT);
     GPIO_INIT(PORTD,3,INPUT);
     GPIO_INIT(PORTD,4,INPUT);
     GPIO_INIT(PORTD,5,INPUT);  
     GPIO_INIT(PORTD,6,INPUT);
     GPIO_INIT(PORTD,7,INPUT);
    
    //UART
    GPIOType_UART(PORTB_16_17);
    UART_INIT(UART0,75000,115200);
    
    SET_IRQ_PRIOR(INT_PORTB,0);
    SET_IRQ_PRIOR(INT_PORTC,1);
    SET_IRQ_PRIOR(INT_PORTE,2);
     EnableInterrupts
     while(1)
      {
          if(flag_photo)
           {
               flag_photo=0;
               UART_S1(UART0,0XFF);
               for(i=0;i<X_MAX;i++)
                   for(j=0;j<Y_MAX;j++)
                       UART_S1(UART0,date[i][j]);
               i=0;j=0;
               Enable_IRQ(INT_PORTB);
               EnableInterrupts
           }
      }
 }
void PORTB_IRQHandler(void)
 {
        DisableInterrupts
       GPIOINT_Clear(PORTB);
       Enable_IRQ(INT_PORTC);
       Disable_IRQ(INT_PORTB);
       yuv=0;
      EnableInterrupts
 }
void PORTC_IRQHandler(void)
 {
       GPIOINT_Clear(PORTC);
       //Disable_IRQ(INT_PORTC);
       //Enable_IRQ(INT_PORTE);
       yuv++;
       if(yuv%3==0)
        {
            for(j=0;j<Y_MAX;j++)
             {
                 date[i][j]=(uint8)(GPIOD_PDIR&(0XFF));
             }
            i++;
            if(i>=X_MAX)
             {
                 flag_photo=1;
                 Disable_IRQ(INT_PORTC);
                 DisableInterrupts;
             }
        }
 }
/*void PORTE_IRQHandler(void)
 {
       GPIOINT_Clear(PORTE);
       date[i][j]=(uint8)(GPIOD_PDIR&(0XFF));
       j++;
       if(j>Y_MAX) 
        {   
            j=Y_MAX;
            Enable_IRQ(INT_PORTC);
            Disable_IRQ(INT_PORTE);
        }
 }*/